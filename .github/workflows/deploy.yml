# Navnet på arbeidsflyten som vises i "Actions"-fanen på GitHub
name: Deploy to GitHub Pages

# Styrer når denne arbeidsflyten skal kjøre
on:
  # Kjør HVER GANG noen pusher kode til "main"-branchen
  push:
    branches:
      - main
  # Allow manual trigger from Actions tab
  workflow_dispatch: # Add this to trigger it manually for testing

# Tillatelser som arbeidsflyten trenger for å publisere
permissions:
  contents: read
  pages: write
  id-token: write

# Definerer jobbene som skal kjøres
jobs:
  # Jobb 1: Bygge prosjektet
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Sjekk ut koden (Checkout)
        uses: actions/checkout@v4

      - name: Sett opp Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20' 
          cache: 'npm'

      - name: Installer avhengigheter
        run: npm ci 

      - name: DEBUG - List files before build # <<< ADD THIS SECTION
        run: |
          echo "Current directory: $(pwd)"
          echo "Listing all files recursively:"
          ls -R
          echo "Checking for public/sw.js:"
          if [ -f public/sw.js ]; then
            echo "FOUND: public/sw.js"
          else
            echo "NOT FOUND: public/sw.js"
          fi
          echo "Checking for vite.config.ts:"
          if [ -f vite.config.ts ]; then
            echo "FOUND: vite.config.ts"
          else
            echo "NOT FOUND: vite.config.ts"
          fi

      - name: Bygg prosjektet
        run: npm run build # This is where vite-plugin-pwa runs
        env: 
          VITE_FIREBASE_API_KEY: ${{ secrets.VITE_FIREBASE_API_KEY }}
          # ... other firebase env vars ...

      - name: DEBUG - List dist folder contents and sw.js # <<< ADD THIS SECTION
        run: |
          echo "Listing dist folder:"
          ls -R dist
          echo "Contents of dist/sw.js:"
          cat dist/sw.js # This will print the generated sw.js to the Action logs

      - name: Last opp bygge-resultatet (artifact)
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./dist 

  # Jobb 2: Publisere til GitHub Pages
  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Publiser til GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
