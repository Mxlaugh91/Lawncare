name: Deploy to GitHub Pages

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Sjekk ut koden (Checkout)
        uses: actions/checkout@v4

      - name: Sett opp Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          # VIKTIG: Fjern cache midlertidig for å tvinge fresh install
          # cache: 'npm'  # Kommenter ut denne linjen

      - name: Slett node_modules og package-lock
        run: |
          rm -rf node_modules
          rm -f package-lock.json

      - name: Installer avhengigheter (fresh install)
        run: |
          npm cache clean --force
          npm install  # Bruk install i stedet for ci for å regenerere lock file

      - name: DEBUG - Sjekk vite config og sw.js plassering
        run: |
          echo "=== Checking vite.config.ts ==="
          grep -n "swSrc" vite.config.ts || echo "swSrc not found in vite.config.ts"
          echo ""
          echo "=== Checking for sw.js files ==="
          find . -name "sw.js" -type f | grep -v node_modules
          echo ""
          echo "=== Content of src/sw.js (first 20 lines) ==="
          head -20 src/sw.js || echo "src/sw.js not found"
          echo ""
          echo "=== Checking node_modules vite-plugin-pwa version ==="
          npm list vite-plugin-pwa

      - name: Bygg prosjektet
        run: npm run build
        env:
          VITE_FIREBASE_API_KEY: ${{ secrets.VITE_FIREBASE_API_KEY }}
          VITE_FIREBASE_AUTH_DOMAIN: ${{ secrets.VITE_FIREBASE_AUTH_DOMAIN }}
          VITE_FIREBASE_PROJECT_ID: ${{ secrets.VITE_FIREBASE_PROJECT_ID }}
          VITE_FIREBASE_STORAGE_BUCKET: ${{ secrets.VITE_FIREBASE_STORAGE_BUCKET }}
          VITE_FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.VITE_FIREBASE_MESSAGING_SENDER_ID }}
          VITE_FIREBASE_APP_ID: ${{ secrets.VITE_FIREBASE_APP_ID }}

      - name: Last opp bygge-resultatet (artifact)
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./dist

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Publiser til GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
